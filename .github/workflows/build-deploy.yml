name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    runs-on: ubuntu-latest
    environment:
      name: testing

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 22835
          POSTGRES_DB: fastAPI_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Pulling Git repo
        uses: actions/checkout@v2

      - name: Install Python version 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Update pip and install dependencies
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Test with pytest
        env:
          DATABASE_HOSTNAME: localhost
          DATABASE_PORT: 5432
          DATABASE_PASSWORD: 22835
          DATABASE_NAME: fastAPI
          DATABASE_USERNAME: postgres
          SECRET_KEY: 2c543d08b1b4f60f5fa3b6ff13672468675f5d0171a7ca0326a28d30e81e87bc
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 30
        run: |
          pip install pytest
          pytest tests/

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi_learning:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
